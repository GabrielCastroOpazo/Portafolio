<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/sqlite3/BD_BIKES/bdbikes.bd.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="browser pragmas query structure" current="2"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="1621"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,5:mainBikes"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Bikes" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="3" mode="0"/></sort><column_widths><column index="1" value="87"/><column index="2" value="300"/><column index="3" value="300"/><column index="4" value="70"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="bikeshops" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="135"/><column index="2" value="287"/><column index="3" value="175"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="orderlines" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="4" mode="0"/></sort><column_widths><column index="1" value="134"/><column index="2" value="124"/><column index="3" value="132"/><column index="4" value="145"/><column index="5" value="130"/><column index="6" value="104"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats><column index="2" value="&quot;order.line&quot;"/></display_formats><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="Revenue">-- bikes bike.id=procut.id
--  tablas orderlines , Bikes , bikeshops
--
--
--Obtener de lastablas orderlines y Bikes el precio y cantidad para obener el total vendido 
SELECT  
    CASE
        WHEN b.description LIKE '%Mountain%' THEN 'Mountain'
        WHEN b.description LIKE '%Road%' THEN 'Road'
        ELSE 'Other'
    END AS Category,
    SUM(o.quantity) AS TotalQuantity,
    SUM(b.price * o.quantity) AS TotalRevenue
FROM Bikes b
LEFT JOIN orderlines o 
ON b.bike_id = o.product_id
WHERE b.description LIKE '%Mountain%' OR b.description LIKE '%Road%'
GROUP BY Category;











</sql><sql name="Supersix">-- bikes bike.id=procut.id
--  tablas orderlines , Bikes , bikeshops
--
-- seleccionar todos los productos ocn el modelo Supersix
SELECT 
    o.*,
    b.price * o.quantity AS Revenue,
    CASE
        WHEN b.description LIKE '%Mountain%' THEN 'Mountain'
        WHEN b.description LIKE '%Road%' THEN 'Road'
        ELSE 'Other'
    END AS Category,
    CASE
        WHEN b.model LIKE '%Supersix%' THEN SUBSTR(s.location, INSTR(s.location,',') + 1)
        ELSE NULL
    END AS state
FROM orderlines o
LEFT JOIN Bikes b ON b.bike_id = o.product_id
LEFT JOIN bikeshops s ON s.bikeshop_id = o.order_line
WHERE b.model like '%Supersix%';




</sql><sql name="cuartiles">-- Crear cuartiles para los modelos supersix del estado de florida 'FL'
-- 25% Bajo 25%-75% Medio y 75%&lt; Alto 
SELECT 
    o.*,
	 b.*,
    b.price * o.quantity AS Revenue,
    CASE
        WHEN b.description LIKE '%Mountain%' THEN 'Mountain'
        WHEN b.description LIKE '%Road%' THEN 'Road'
        ELSE 'Other'
    END AS Category,
    CASE
        WHEN b.model LIKE '%Supersix%' THEN SUBSTR(s.location, INSTR(s.location, ',') + 1)
        ELSE NULL
    END AS state,

    CASE 
        WHEN b.price * o.quantity &lt;= (
            SELECT sum(Revenue) * 0.25
            FROM (
                SELECT b.price * o.quantity AS Revenue
                FROM orderlines o
                LEFT JOIN Bikes b ON b.bike_id = o.product_id
                LEFT JOIN bikeshops s ON s.bikeshop_id = o.order_line
                WHERE s.location LIKE '%FL%'  -- Filtrar por ubicación 'FL'
            )
        ) THEN 'Low'
        WHEN b.price * o.quantity &lt;= (
            SELECT sum(Revenue) * 0.75
            FROM (
                SELECT b.price * o.quantity AS Revenue
                FROM orderlines o
                LEFT JOIN Bikes b ON b.bike_id = o.product_id
                LEFT JOIN bikeshops s ON s.bikeshop_id = o.order_line
                WHERE s.location LIKE '%FL%'  -- Filtrar por ubicación 'FL'
            )
        ) THEN 'Medium'
        ELSE 'High'
    END AS Quartile
FROM 
    orderlines o
LEFT JOIN 
    Bikes b ON b.bike_id = o.product_id
LEFT JOIN 
    bikeshops s ON s.bikeshop_id = o.order_line
WHERE 
    state LIKE '%FL%';  -- Filtrar por estado 'FL' en la consulta principal
</sql><sql name="categoria super six con categorias de precio indivudual ">-- seleccionar los modelos supersix y segun un rango crear una columna categoria 
SELECT *,
    CASE
        WHEN price &lt; 3000 THEN 'Bajo'
        WHEN price &lt; 5000 THEN 'Bajo-medio'
        WHEN price &lt; 10000 THEN 'Medio'
        ELSE 'Alto'
    END AS categoria
FROM (
    SELECT *
    FROM Bikes
    WHERE model LIKE '%Supersix%'
) AS filtered_bikes
WHERE price &gt; 3000;
</sql><current_tab id="3"/></tab_sql></sqlb_project>
